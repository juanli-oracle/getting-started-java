# docker box definition
box:
  id: openjdk
  ports:
    - "8080"

# defining the dev pipeline
dev:
  steps:
    - script:
      name: gradle bootRun
      code: |
        ./gradlew bootRun

# Build definition
build:
  # The steps that will be executed on build
  steps:
    # A step that executes `gradle build` command
    - script:
        name: gradle build
        code: |
          rm -rf $WERCKER_CACHE_DIR/*
          cp -r src/main/resources/* $WERCKER_CACHE_DIR
          ./gradlew --full-stacktrace -q --project-cache-dir=$WERCKER_CACHE_DIR build
    - script:
        name: environment details
        code: |
          echo "% env"
          env
          echo "% ls -alF $WERCKER_CACHE_DIR"
          ls -alF $WERCKER_CACHE_DIR

scan:
  box:
    id: phx.ocir.io/kubernetessecurity/sscm/sscm-go-mvn-jdk8
    username: $SSCM_OCIR_PULLER_USER
    password: $SSCM_OCIR_PULLER_SECRET
    tag: latest
    registry: phx.ocir.io

  steps:
    - script:
        name: Perform scan
        code: |
          #!/bin/bash
          export CLAIR_OUTPUT=Low
          export CLAIR_ADDR=$CLAIR_ADDR
          export CLAIR_TIMEOUT=10
          export DOCKER_TIMEOUT=10
          export DOCKER_USER=$DOCKER_USERNAME
          export DOCKER_PASSWORD=$DOCKER_PASSWORD
          export DOCKER_INSECURE=true
          export REGISTRY_INSECURE=true
          export JSON_OUTPUT=true
          # CLAIR_OUTPUT=Low CLAIR_ADDR=$CLAIR_ADDR CLAIR_TIMEOUT=10 DOCKER_TIMEOUT=10 DOCKER_USER=$DOCKER_USERNAME DOCKER_PASSWORD=$DOCKER_PASSWORD DOCKER_INSECURE=true REGISTRY_INSECURE=true JSON_OUTPUT=true klar $REPO_REPOSITORY > $WERCKER_CACHE_DIR/klar-scan-report.json
          klar $REPO_REPOSITORY > $WERCKER_CACHE_DIR/klar-scan-report.json
          trap finish EXIT
          /var/lib/scripts/sscm-scanner/run_sscm_scanner.sh
