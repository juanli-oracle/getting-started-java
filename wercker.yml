# docker box definition
box:
  id: openjdk
  ports:
    - "8080"

# defining the dev pipeline
dev:
  steps:
    - script:
      name: gradle bootRun
      code: |
        ./gradlew bootRun

# Build definition
build:
  # The steps that will be executed on build
  steps:
    # A step that executes `gradle build` command
    - script:
        name: gradle build
        code: |
          rm -rf $WERCKER_CACHE_DIR/*
          cp -r src/main/resources/klar $WERCKER_CACHE_DIR
          
          # ./gradlew --full-stacktrace -q --project-cache-dir=$WERCKER_CACHE_DIR build
    - script:
        name: environment details
        code: |
          echo "% env"
          env
          echo "% ls -alF $WERCKER_CACHE_DIR"
          ls -alF $WERCKER_CACHE_DIR
          export PATH=$PATH:$WERCKER_CACHE_DIR
          # declare -x https_proxy=http://www-proxy-hqdc.us.oracle.com:80
          # declare -x http_proxy=http://www-proxy-hqdc.us.oracle.com:80
          # declare -x NO_PROXY="localhost,.us.oracle.com,.oraclecorp.com,.oracle.com"
          declare -x CLAIR_ADDR="http://130.35.143.89:30060"
          declare -x CLAIR_OUTPUT="Low"
          declare -x CLAIR_THRESHOLD="10"
          declare -x DOCKER_INSECURE="true"
          declare -x DOCKER_PASSWORD="oWedCo1rQFJ\$;wt-FgFF"
          declare -x DOCKER_USER="kubernetessecurity/sscm_ocir_puller"
          klar phx.ocir.io/kubernetessecurity/sscm/demo:latest
          echo "% Scan finished"
# security scan definition
security-scan:
  # The steps that will run the security scan to check for libraries with reported CVEs
  steps:
    - script:
        name: environment details
        code: |
          echo "% env"
          env
          export PATH=$PATH:$WERCKER_CACHE_DIR
          echo "% Scan finished"
